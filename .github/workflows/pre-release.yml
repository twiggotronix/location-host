name: Pre Release

on:
    workflow_dispatch:
        inputs:
            version:
                description: 'Version to release'
                required: true
                default: 'Patch'
                type: choice
                options:
                    - major
                    - minor
                    - patch

jobs:
    pre-release:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [21.x]
        steps:
            - uses: actions/checkout@v4

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Install conventional-changelog
              run: npm install -g conventional-changelog-cli

            - name: Generate latest changelog
              id: generate-changelog
              run: |
                  latest_changelog=$(conventional-changelog -p angular -r 1)
                  echo "$latest_changelog" > latest_changelog.txt

            - name: Upload latest changelog
              uses: actions/upload-artifact@v2
              with:
                  name: latest-changelog
                  path: latest_changelog.txt

            - name: Build & Commit Changelog
              id: update_changelog
              run: |
                  npm install
                  npm run changelog
                  npm version ${{ github.event.inputs.version}} --no-git-tag-version
                  git add CHANGELOG.md package.json
                  git config --global user.name 'github-actions[bot]'
                  git config --global user.email 'github-actions[bot]@users.noreply.github.com'
                  git commit -am "chore(release): update changelog"
                  git push
              env:
                  GITHUB_TOKEN: ${{ secrets.TOKEN }}
    build:
        runs-on: ubuntu-latest
        needs: [pre-release]
        strategy:
            matrix:
                node-version: [21.x]
        steps:
            - uses: actions/checkout@v4

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Build
              run: |
                  npm install
                  npm run build

            - name: Archive binary files
              uses: actions/upload-artifact@v2
              with:
                  name: location-host.exe
                  path: ./dist/location-host.exe # Replace with the path to your binary files
    release:
        needs: [build, pre-release]
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v2
              with:
                  ref: main # Replace with your branch name
                  fetch-depth: 0 # Fetch all history for the branch

            - name: Download built artifact
              uses: actions/download-artifact@v2
              with:
                  name: location-host.exe
                  path: ./dist/

            - name: Download latest changelog
              uses: actions/download-artifact@v2
              with:
                  name: latest-changelog
                  path: .

            - name: Read changelog content
              run: |
                  changelog_content=$(cat latest_changelog.txt)
                  echo "changelog_content<<EOF" >> $GITHUB_ENV
                  echo "$changelog_content" >> $GITHUB_ENV
                  echo "EOF" >> $GITHUB_ENV

            - name: Create Release
              run: |
                  app_version=$(jq -r '.version' package.json)
                  echo "app_version<<EOF" >> $GITHUB_ENV
                  echo "$app_version" >> $GITHUB_ENV
                  echo "EOF" >> $GITHUB_ENV

            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.TOKEN }}
              with:
                  tag_name: v${{ env.app_version }}
                  release_name: Release ${{ env.app_version}}
                  body: ${{ env.changelog_content }}

            - name: Upload Release Asset
              id: upload-release-asset
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./dist/location-host.exe
                  asset_name: location-host.exe
                  asset_content_type: application/octet-stream
