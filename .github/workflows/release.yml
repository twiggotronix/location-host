name: Release

on:
    workflow_run:
        workflows: ['Main Workflow']
        types:
            - completed
    push:
        tags:
            - 'v*'

jobs:
    build:
        if: startsWith(github.ref, 'refs/tags/') # Run only if the push is a tag
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [20.x]
        steps:
            - uses: actions/checkout@v4
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Build
              run: |
                  npm install
                  npm run build
            - name: Archive binary files
              uses: actions/upload-artifact@v2
              with:
                  name: location-host-exe
                  path: ./dist/location-host.exe # Replace with the path to your binary files
    release:
        needs: build
        if: startsWith(github.ref, 'refs/tags/') # Run only if the push is a tag
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Download built artifact
              uses: actions/download-artifact@v2
              with:
                  name: location-host-exe
                  path: ./dist/

            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.TOKEN }}
              with:
                  tag_name: ${{ github.ref }} # Use the tag name as the release tag
                  release_name: Release ${{ github.ref }} # Use the tag name as the release name
                  body: |
                      Describe your release here.

            - name: Upload Release Asset
              id: upload-release-asset
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./dist/location-host.exe
                  asset_name: location-host-exe
                  asset_content_type: application/octet-stream
